<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAALsAAABZAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAWQAAALsAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAzgAA
        AGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnAAAAzgAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ABAAAADOAAAAZwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGcAAADOAAAAEAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAEAAAAM4AAABnAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZwAAAM4AAAAQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAQAAAAzgAAAGcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABnAAAAzgAA
        ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAADVAAAApQAAAGQAAABnAAAAZwAAAGcAAABnAAAAZAAA
        AKUAAADVAAAAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAigAAAOYAAADNAAAAzQAAAM0AAADNAAAAzQAA
        AM0AAADNAAAAzQAAAOYAAACKAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA4AAADLAAAAiwAAAB4AAAAgAAAAIAAA
        ACAAAAAgAAAAIAAAACAAAAAeAAAAiwAAAMsAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAIkAAADkAAAAzAAA
        AM0AAADNAAAAzQAAAM0AAADNAAAAzQAAAMwAAADkAAAAiQAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADgAA
        AE0AAAC8AAAA1QAAAGoAAABnAAAAZwAAAGoAAADVAAAAvAAAAE0AAAAOAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAACgAAALwAAACLAAAAAAAAAAAAAAAAAAAAAAAAAIsAAAC8AAAACgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAAGAAAABgAAAAYAAAAEQAAAAEAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABJAAAA4QAAAD0AAAAAAAAAAAAAAAAAAAAAAAAAPQAAAOEAAABIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAEAAAARAAAAGAAAABgAAAAYAAAAFAAAAD4AAAA3gAAANAAAADiAAAA1QAA
        ABgAAAAAAAAAAAAAAAAAAAAAAAAAFQAAAL0AAACjAAAABgAAAAAAAAAAAAAAAAAAAAAAAAAGAAAAowAA
        AL0AAAAVAAAAAAAAAAAAAAAAAAAAAAAAABgAAADVAAAA4gAAANAAAADeAAAA+AAAAPkAAABYAAAACwAA
        AF8AAADYAAAAGwAAAAAAAAAAAAAAAAAAAAwAAACWAAAA1QAAACsAAAAAAAAAEQAAAFIAAABSAAAAEQAA
        AAAAAAArAAAA1QAAAJYAAAAMAAAAAAAAAAAAAAAAAAAAGwAAANgAAABfAAAACwAAAFgAAAD5AAAA+QAA
        AEsAAAAAAAAAUgAAANgAAAAbAAAAAAAAAAAAAAAAAAAAQAAAAO4AAABgAAAAAAAAAAkAAACcAAAA4gAA
        AOIAAACcAAAACQAAAAAAAABgAAAA7wAAAEAAAAAAAAAAAAAAAAAAAAAbAAAA2AAAAFIAAAAAAAAASwAA
        APkAAAD8AAAAuwAAAJkAAAC/AAAA2gAAABoAAAAAAAAAAAAAAAAAAAAUAAAAxAAAAJMAAAAAAAAAKgAA
        AOAAAABRAAAAUQAAAOAAAAAqAAAAAAAAAJIAAADEAAAAFAAAAAAAAAAAAAAAAAAAABoAAADaAAAAvwAA
        AJkAAAC7AAAA/AAAAIsAAACxAAAA8wAAALUAAAB3AAAACQAAAAAAAAAAAAAAAAAAAAAAAABOAAAAigAA
        AAUAAAAaAAAA0QAAAKAAAACgAAAA0QAAABgAAAA4AAAA4QAAAFcAAAAAAAAAAAAAAAAAAAAAAAAACQAA
        AHcAAAC1AAAA8wAAALEAAACLAAAAAAAAACYAAADdAAAAQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAnAAAAWAAAAAUAAABKAAAA3gAAAN4AAABJAAAABwAAAKgAAACzAAAACwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEMAAADdAAAAJgAAAAAAAAAAAAAAFAAAANEAAABlAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAADMAAAB+AAAACAAAAAAAAAChAAAAoQAAAAAAAABMAAAA4gAAAEQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAZQAAANEAAAAUAAAAAAAAAAAAAAADAAAArAAAAJwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABoAAABgAAAADQAAAJ8AAACfAAAADgAAALsAAACfAAAABQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcAAAArAAAAAMAAAAAAAAAAAAAAAAAAABrAAAA1AAA
        ABsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKAAAANwAAABgAAAAnQAAAJ0AAABgAAAA3gAA
        ADIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGwAAANQAAABrAAAAAAAAAAAAAAAAAAAAAAAA
        ACUAAADbAAAAZgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAigAAAMoAAAC3AAAAtwAA
        AMoAAACKAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABmAAAA2wAAACUAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAAIwAAADMAAAAGgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkAAAA1AAA
        APUAAAD1AAAA1AAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGgAAAMwAAACMAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAJAAAANQAAACMAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAByAAAA/QAAAP0AAAByAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAACMAAAA1AAA
        ACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWQAAAOYAAABlAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAABgAAADLAAAAywAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAZQAA
        AOYAAABZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAewAAAOcAAABkAAAABAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADcAAAA3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAA
        AGQAAADnAAAAewAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAFQAAABsAAAAbAAAAGwAAABEAAAAIAAAAewAA
        AOgAAACKAAAAGAAAAAAAAAAAAAAAAAAAAAcAAAAaAAAAGQAAABkAAAAaAAAABwAAAAAAAAAAAAAAAAAA
        ABgAAACKAAAA6AAAAHsAAAAIAAAAEQAAABsAAAAbAAAAGwAAABUAAADPAAAA2gAAANgAAADcAAAAsgAA
        ABEAAAACAAAAVwAAANQAAADJAAAAYQAAABgAAAAAAAAAXQAAANsAAADYAAAA2AAAANsAAABdAAAAAAAA
        ABgAAABhAAAAyQAAANQAAABXAAAAAgAAABEAAACyAAAA3AAAANgAAADaAAAAzwAAAPsAAACEAAAASwAA
        AIoAAADgAAAARgAAAC4AAAAuAAAAVAAAAL8AAAD5AAAA1AAAAJMAAAC3AAAA0QAAAFUAAABVAAAA0QAA
        ALcAAACTAAAA1AAAAPkAAAC/AAAAVAAAAC4AAAAuAAAARgAAAOAAAACKAAAASwAAAIQAAAD7AAAA+QAA
        AEsAAAAAAAAAUAAAAPcAAADjAAAA3wAAAN8AAADdAAAA4AAAAO8AAADzAAAA9AAAAPwAAAC5AAAABgAA
        AAYAAAC5AAAA/AAAAPQAAADzAAAA7wAAAOAAAADdAAAA3wAAAN8AAADjAAAA9wAAAFAAAAAAAAAASwAA
        APkAAAD6AAAAgAAAAEUAAACFAAAA4AAAAEoAAAA0AAAANQAAADUAAAA1AAAANAAAADQAAAAxAAAAmgAA
        ANAAAABQAAAAUAAAANAAAACaAAAAMQAAADQAAAA0AAAANQAAADUAAAA1AAAANAAAAEoAAADgAAAAhQAA
        AEUAAACAAAAA+gAAAPEAAAD7AAAA+QAAAP4AAADPAAAAFAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABtAAAA/QAAAPkAAAD5AAAA/QAAAG0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAA
        AM8AAAD+AAAA+QAAAPsAAADx/8fj///H4///x+P//8fj///H4///wAP//4AB//+AAf//gAH//8AD///j
        x/8D48fAA8PDwAOEIcAjiBHEA4gRwAPAA8CP4APxj+JH8Y/wB/HH8A/jx/AP48P4H8Ph/D+H8Pw/D/B+
        fg8AOBwAAAgQAAAAAAAgAAAEAAAAAAP4H8A=
</value>
  </data>
</root>